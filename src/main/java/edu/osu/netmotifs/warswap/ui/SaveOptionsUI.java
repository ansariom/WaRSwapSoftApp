package edu.osu.netmotifs.warswap.ui;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicBorders.RadioButtonBorder;

/**
 *
 * @author mitra
 */
public class SaveOptionsUI extends javax.swing.JFrame implements ActionListener {

    /**
	 * 
	 */
	private static final long serialVersionUID = 4710775215331616421L;
	/**
     * Creates new form SaveOptionsUI
     */
	
	private String outputDirPath;
	private StartWarswapSoftApp parent;
	
    public SaveOptionsUI(String outputDirPath, StartWarswapSoftApp parent) {
        this.outputDirPath = outputDirPath;
        this.parent = parent;
        
    	initComponents();
        initButtonIcons();
    }
    
    public SaveOptionsUI() {
    	initComponents();
    	initButtonIcons();
	}

	private void initButtonIcons() {
		ButtonGroup buttonGroup = new ButtonGroup();
		buttonGroup.add(textRB);
		buttonGroup.add(csvRB);
		buttonGroup.add(htmlRB);
		
    	ImageIcon icon = new ImageIcon("images/ok.jpg");
    	Image img = icon.getImage();
    	Image newimg = img.getScaledInstance(20, 20,
    			java.awt.Image.SCALE_SMOOTH);
    	icon = new ImageIcon(newimg);
    	
    	okBtn.setText("OK");
    	okBtn.setActionCommand("OK");
    	okBtn.setIcon(icon);
    	okBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser chooser = new JFileChooser(outputDirPath);
				FileNameExtensionFilter filter = null;
				String fileType = "text";
				
				if (textRB.isSelected()) {
					filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
					fileType = "text";
				} else if (csvRB.isSelected()) { 
					filter = new FileNameExtensionFilter("CSV FILES", "csv");
					fileType = "csv";
				} else { 
					filter = new FileNameExtensionFilter("HTML FILES", "htm", "html");
					fileType = "html";
				}
				chooser.setFileFilter(filter);

				int returnVal = chooser.showSaveDialog(SaveOptionsUI.this);
				if (returnVal == JFileChooser.APPROVE_OPTION) {
					File file = chooser.getSelectedFile();
					parent.saveMotifs(file, fileType);
				}				
			}
		});
    	
		icon = new ImageIcon("images/cancel.jpg");
		img = icon.getImage();
		newimg = img.getScaledInstance(20, 20,
				java.awt.Image.SCALE_SMOOTH);
		icon = new ImageIcon(newimg);

		cancelBtn.setText("cancel");
		cancelBtn.setActionCommand("cancel");
		cancelBtn.addActionListener(this);
		cancelBtn.setIcon(icon);
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textRB = new javax.swing.JRadioButton();
        csvRB = new javax.swing.JRadioButton();
        htmlRB = new javax.swing.JRadioButton();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Save Options");

        textRB.setText("Save as plain text file");
        textRB.setSelected(true);

        csvRB.setText("Save as CSV file");

        htmlRB.setText("Save as HTML file");

        okBtn.setText("OK");

        cancelBtn.setText("Cancel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(csvRB)
                            .addComponent(textRB)
                            .addComponent(htmlRB))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okBtn)
                        .addGap(98, 98, 98))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(textRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(csvRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(htmlRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveOptionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveOptionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveOptionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveOptionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	SaveOptionsUI optionsUI = new SaveOptionsUI();
            	Toolkit tk = Toolkit.getDefaultToolkit();
				Dimension screenSize = tk.getScreenSize();
            	final int WIDTH = screenSize.width;
				final int HEIGHT = screenSize.height;
				optionsUI.setLocation(WIDTH / 3, HEIGHT / 3);
				optionsUI.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton cancelBtn;
    private javax.swing.JRadioButton csvRB;
    private javax.swing.JRadioButton htmlRB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okBtn;
    private javax.swing.JRadioButton textRB;
    // End of variables declaration                   
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getActionCommand().equalsIgnoreCase("cancel")) {
			this.dispose();
		}
	}
}
